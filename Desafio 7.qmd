---
title: "Desafio 7"
author: "Luiz Eduardo Rodrigues"
format: html
editor: visual
---

```{r}
library(RSQLite)
library(tidyverse)
if(!"discoCopy.db" %in% list.files("Dados")){
file.copy("Dados/disco.db",
"Dados/discoCopy.db")
}
```

```{r}
db <- dbConnect(SQLite(),"Dados/discoCopy.db")

dbListTables(db)
```

```{r}
dbExecute(db,"DROP TABLE instruments")
```

```{r}
dbExecute(db,
"CREATE TABLE instruments
(AlbumId INTEGER,
TrackId INTEGER,
ElectricGuitar INTEGER,
Singer INTEGER,
Trumpet INTEGER)")
```

```{r}
dbListFields(db,'instruments')
```

```{r}
dbListTables(db)
```

```{r}
aname = "Gilberto Gil"
sql = paste0("SELECT ArtistId FROM artists "
,
"WHERE Name = '"
, aname,
"'")
aId = dbGetQuery(db, sql)
sql = paste('SELECT Title FROM albums'
,
'WHERE ArtistId ='
, aId)
dbGetQuery(db, sql)

aname <- "Gilberto Gil'; DROP TABLE 'albums"
```

```{r}
sql = paste("SELECT ArtistId FROM artists"
,
"WHERE Name = ?")
query <- dbSendQuery(db, sql)
dbBind(query, list("Gilberto Gil"))
aId <- dbFetch(query)
dbClearResult(query)
# Segundo passo interno, nÃ£o deve causar problema
sql = paste('SELECT Title FROM albums'
,
'WHERE ArtistId ='
, aId)
dbGetQuery(db, sql)
```

```{r}
dbListFields(db,'instruments')
```

```{r}
# Eu Tu Eles: AlbumId 85,
sql = paste('SELECT TrackId, Name FROM tracks'
,
'WHERE AlbumId = 85')
dbGetQuery(db, sql) %>% head
```

```{r}
dbExecute(db,
"INSERT INTO instruments
VALUES ('85'
,
'1075'
, 0, 1, 0),
('85'
,
'1078'
, 0, 1, 0); ")
```

```{r}
dbGetQuery(db,
"SELECT * FROM instruments")
```

```{r}
if (!DBI::dbExistsTable(db, "mtcars")) {
dbWriteTable(db, "mtcars", mtcars)}
dbListTables(db)
```

```{r}
dbGetQuery(db,
"SELECT * FROM mtcars") %>% head(3)
```

```{r}
theAvgCar <- mtcars %>%
summarise_all(function(x) round(mean(x), 2))
theAvgCar
```

```{r}
dbWriteTable(db,
"mtcars"
, theAvgCar, append = TRUE)
dbGetQuery(db,
"SELECT * FROM mtcars") %>% tail(3)
```

```{r}
dbWriteTable(db,
"mtcars"
, mtcars, overwrite = TRUE)
dbGetQuery(db,
"SELECT * FROM mtcars") %>% tail(3)
```

```{r}
res <- dbSendQuery(db,
"SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
chunk <- dbFetch(res, n = 5)
print(nrow(chunk))
}
dbClearResult(res)
```

```{r}
dbDisconnect(db)
if("discoCopy.db" %in% list.files("../dados/")){
file.remove("../dados/discoCopy.db")
}
```

```{r}
airports <- read_csv("Dados/airports.csv"
, col_types = "cccccdd")
airlines <- read_csv("Dados/airlines.csv"
, col_types = "cc")
air <- dbConnect(SQLite(), dbname="Dados/air.db")
if (!DBI::dbExistsTable(air, "airports")) {
dbWriteTable(air, name = "airports", airports)}
if (!DBI::dbExistsTable(air, "airlines")) {
dbWriteTable(air, name = "airlines", airlines)}
dbListTables(air)
```

```{r}
dbDisconnect(air)
if("air.db" %in% list.files("../dados/")){
file.remove("../dados/air.db")
}
```

```{r}
library(RSQLite)
library(tidyverse)
library(dbplyr)
db <- dbConnect(SQLite(),
"Dados/disco.db") # original
tracks <- tbl(db,
"tracks") # dplyr
tracks %>% head(3)
```

```{r}
meanTracks <- tracks %>%
group_by(AlbumId) %>%
summarise(AvLen = mean(Milliseconds, na.rm = TRUE),
AvCost = mean(UnitPrice, na.rm = TRUE))
meanTracks
```

```{r}
meanTracks %>% show_query()
```

```{r}
mT <- meanTracks %>% collect()
mT
dbDisconnect(db)
```
